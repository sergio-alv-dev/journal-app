{"version":3,"sources":["firebase/firebaseConfig.js","helpers/fileUpload.js","helpers/loadNotes.js","types/types.js","actions/notes.js","hooks/useForm.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","actions/ui.js","actions/auth.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebaseConfig","apiKey","process","REACT_APP_apiKey","authDomain","REACT_APP_authDomain","projectId","REACT_APP_projectId","storageBucket","REACT_APP_storageBucket","messagingSenderId","REACT_APP_messagingSenderId","appId","REACT_APP_appId","measurementId","REACT_APP_measurementId","firebase","initializeApp","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","console","log","loadNotes","uid","collection","get","notesSnap","notes","forEach","snapHijo","push","id","data","types","addnewNote","note","type","payload","activeNote","setNotes","startSaveNote","dispatch","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","useForm","initialState","useState","values","setValues","reset","newState","handleInputChange","target","name","value","NotesAppBar","useDispatch","active","useSelector","state","className","style","display","onChange","e","files","text","allowOutsideClick","isLoading","allowEnterKey","allowEscapeKey","showConfirmButton","willOpen","showLoading","fileUrl","close","startUploading","onClick","document","querySelector","click","NoteScreen","formValues","activeId","useRef","useEffect","current","placeholder","autoComplete","src","alt","delete","startDeleting","NothingSelected","setError","err","removeError","uiFinishLoading","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","message","logout","JournalEntry","date","noteDate","moment","backgroundSize","backgroundImage","format","JournalEntries","map","Sidebar","signOut","newNote","Date","getTime","add","JournalScreen","LoginScreen","loading","ui","isFormValid","validator","isEmail","length","onSubmit","preventDefault","disabled","signInWithPopup","to","RegisterScreen","msgError","password2","trim","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f62334e1.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_apiKey,\r\n    authDomain: process.env.REACT_APP_authDomain,\r\n    projectId: process.env.REACT_APP_projectId,\r\n    storageBucket: process.env.REACT_APP_storageBucket,\r\n    messagingSenderId: process.env.REACT_APP_messagingSenderId,\r\n    appId: process.env.REACT_APP_appId,\r\n    measurementId: process.env.REACT_APP_measurementId,\r\n};\r\n\r\n\r\n// const firebaseConfig = {\r\n//     apiKey: \"AIzaSyDUsuXW5wiFOFSnQ9stiw-BUC22CmMYxTU\",\r\n//     authDomain: \"react-app-curso-kll.firebaseapp.com\",\r\n//     projectId: \"react-app-curso-kll\",\r\n//     storageBucket: \"react-app-curso-kll.appspot.com\",\r\n//     messagingSenderId: \"695085237107\",\r\n//     appId: \"1:695085237107:web:d545f083c00d27ce8cbb06\",\r\n//     measurementId: \"G-9ZXLVP8ERG\"\r\n// };\r\n\r\n// const firebaseConfigTesting = {\r\n//     apiKey: \"AIzaSyAXHPjgx3WCKAgnoGuHHb6KYQeirkavL04\",\r\n//     authDomain: \"testing-e580b.firebaseapp.com\",\r\n//     projectId: \"testing-e580b\",\r\n//     storageBucket: \"testing-e580b.appspot.com\",\r\n//     messagingSenderId: \"247481057641\",\r\n//     appId: \"1:247481057641:web:c2e09ca336c611c998bdf8\",\r\n//     measurementId: \"G-W6B7E6PYFJ\"\r\n//   };\r\n\r\n\r\n// if( process.env.NODE_ENV === 'test') {\r\n//     // test\r\n//     firebase.initializeApp(firebaseConfigTesting);\r\n\r\n// }else {\r\n    // devv / prod\r\n    firebase.initializeApp(firebaseConfig);\r\n\r\n// }\r\n\r\n// Initialize Firebase\r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n}","\r\n\r\nexport const fileUpload = async ( file ) => {\r\n    \r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/dlwi9zyyq/upload';\r\n\r\n    const formData = new FormData();\r\n    formData.append( 'upload_preset', 'react-journal' );\r\n    formData.append( 'file', file );\r\n\r\n    try {\r\n        const resp = await fetch( cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        } )\r\n\r\n        if ( resp.ok ){\r\n             const cloudResp = await resp.json();\r\n             return cloudResp.secure_url;\r\n\r\n        } else {\r\n            // throw await resp.json();\r\n            return null;\r\n        }\r\n    } catch (error) {\r\n        console.log(error)\r\n        throw error;\r\n    }\r\n    \r\n    \r\n    \r\n    // return url del a imagen\r\n}","import { db } from \"../firebase/firebaseConfig\"\r\n\r\n\r\nexport const loadNotes = async ( uid ) => {\r\n    \r\n    const notesSnap = await db.collection(`${ uid }/journal/notes`).get();\r\n    const notes = [];\r\n    \r\n    notesSnap.forEach( snapHijo => {\r\n\r\n        notes.push({\r\n            id: snapHijo.id,\r\n            ...snapHijo.data()\r\n        })\r\n    });\r\n\r\n    return notes;\r\n}","\r\n\r\nexport const types = {\r\n    \r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set Active note',\r\n    notesLoad: '[Notes] Load notes',\r\n    notesUpdated: '[Notes] Update note',\r\n    notesFileUrl: '[Notes] Update image url',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogoutCleaning: '[Notes] Logout Cleaning',\r\n\r\n}","import Swal from 'sweetalert2'\r\n\r\nimport { db } from \"../firebase/firebaseConfig\"\r\nimport { fileUpload } from '../helpers/fileUpload'\r\nimport { loadNotes } from \"../helpers/loadNotes\"\r\nimport { types } from \"../types/types\"\r\n\r\n// cloudinary\r\n// react-journal\r\n\r\nexport const startNewNote = () => {\r\n    return async ( dispatch, getState ) => {\r\n\r\n        const { uid } = getState().auth;\r\n\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        // console.log(uid)\r\n\r\n        try {\r\n            \r\n            const doc = await db.collection(`${ uid }/journal/notes`).add( newNote )\r\n                                                                        .catch( e => {\r\n                                                                            console.log(e)\r\n                                                                            Swal.fire('Error', e.message, 'error');\r\n                                                                        });\r\n    \r\n            dispatch( activeNote( doc.id, newNote ) );\r\n            dispatch( addnewNote( doc.id, newNote ) );\r\n        } catch (error) {\r\n            console.log(error)            \r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const addnewNote = ( id, note ) => ({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id, ...note\r\n}})\r\n\r\nexport const activeNote = ( id, note ) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n});\r\n\r\n\r\nexport const startLoadingNotes = ( uid ) => {\r\n    return async ( dispatch ) => {\r\n\r\n        const notes = await loadNotes( uid );\r\n        dispatch( setNotes( notes ) );\r\n\r\n    }\r\n}\r\n\r\nexport const setNotes = ( notes ) => ({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n});\r\n\r\nexport const startSaveNote = ( note ) => {\r\n    return async ( dispatch, getState ) => {\r\n\r\n        const { uid } = getState().auth;\r\n\r\n        // console.log(uid)\r\n        \r\n        \r\n        if ( !note.url ) {\r\n            delete note.url\r\n        }\r\n\r\n        const noteToFirestore = { ...note };\r\n        delete noteToFirestore.id;\r\n\r\n        // console.log(noteToFirestore)\r\n        //add try, catch\r\n        await db.doc(`${ uid }/journal/notes/${note.id}`).update( noteToFirestore );\r\n\r\n        dispatch( refreshNote( note.id, noteToFirestore ) );\r\n        Swal.fire( 'Saved', note.title, 'success' )\r\n    }\r\n}\r\n\r\nexport const refreshNote = ( id, note) => ({\r\n    type: types.notesUpdated,\r\n    payload: {\r\n        id, note : {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n\r\n})\r\n\r\n\r\nexport const startUploading = ( file ) => {\r\n    return async ( dispatch , getState) => {\r\n\r\n        const { active: activeNote } = getState().notes;\r\n\r\n        Swal.fire( {\r\n            title: 'Uploading...',\r\n            text: 'Please Wait...',\r\n            allowOutsideClick: () => !Swal.isLoading(),\r\n            allowEnterKey: false,\r\n            allowEscapeKey: false,\r\n            showConfirmButton: false,\r\n            willOpen : () => {\r\n                Swal.showLoading();\r\n            }\r\n        })\r\n\r\n        const fileUrl = await fileUpload( file );\r\n        activeNote.url = fileUrl;\r\n        dispatch ( startSaveNote ( activeNote ))\r\n\r\n        Swal.close();\r\n    }    \r\n}\r\n\r\n\r\nexport const startDeleting = ( id ) => {\r\n\r\n    return async ( dispatch, getState ) => {\r\n\r\n        const uid = getState().auth.uid;\r\n\r\n        await db.doc(`/${ uid }/journal/notes/${ id }`).delete();\r\n\r\n        dispatch( deleteNote( id ) );\r\n\r\n    }\r\n}\r\n\r\nexport const deleteNote = ( id ) => ({\r\n    type: types.notesDelete,\r\n    payload : id\r\n});\r\n\r\nexport const notesLogout = () => ({\r\n    type: types.notesLogoutCleaning,\r\n});","import { useState } from \"react\";\r\n\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = ( newState = initialState ) => {\r\n        setValues( newState ); \r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        \r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n    \r\n    return [ values, handleInputChange, reset];\r\n\r\n   \r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startSaveNote, startUploading } from '../../actions/notes'\r\n\r\nexport const NotesAppBar = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const { active } = useSelector(state => state.notes)\r\n    \r\n    \r\n    const handleSave = () => { dispatch( startSaveNote( active ) ) }\r\n    \r\n\r\n    const handleUpload = () => {\r\n        document.querySelector('#fileSelector').click();\r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if ( file ) {\r\n            dispatch( startUploading( file ) );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className =\" notes__appbar\">\r\n            <span> 26 de feb 1992</span>\r\n\r\n            <input \r\n                id= \"fileSelector\"\r\n                type = \"file\"\r\n                name=\"file\"\r\n                style = {{ display : 'none' }}\r\n                onChange = { handleFileChange }\r\n            />\r\n\r\n            <div>\r\n                <button \r\n                    className = \"btn\"\r\n                    onClick= { handleUpload } >\r\n                    Picture\r\n                </button>\r\n                <button \r\n                    className = \"btn\" \r\n                    onClick = { handleSave }    \r\n                >\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { activeNote, startDeleting } from '../../actions/notes';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { NotesAppBar } from './NotesAppBar'\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { active:note } = useSelector(state => state.notes);\r\n    const [ formValues, handleInputChange , reset ] = useForm( note );\r\n    const { title , body, id} = formValues;\r\n\r\n\r\n    // useForm usa su propio estado\r\n    // console.log(formValues)\r\n    const activeId = useRef( note.id );\r\n\r\n    useEffect(() => {\r\n        \r\n        if (note.id !== activeId.current )\r\n        { \r\n            //sin este reset el formulario no cambia\r\n            reset( note );\r\n            activeId.current = note.id\r\n        }\r\n        \r\n    }, [ note, reset ])\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch( activeNote( formValues.id, {...formValues}) );\r\n\r\n    }, [ formValues , dispatch]);\r\n\r\n    const handleDelete = () => {\r\n        \r\n        dispatch( startDeleting( id ) )\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n        <div className=\"notes__main-content\">\r\n\r\n            <NotesAppBar />\r\n\r\n            <div className =\"notes__content\">\r\n\r\n                <input\r\n                    type =\"text\"\r\n                    placeholder =\"The best Title\"\r\n                    className =\" notes__title-input\"\r\n                    autoComplete = \"off\"\r\n                    name = \"title\"\r\n                    value = { title }\r\n                    onChange = { handleInputChange }\r\n                    />\r\n\r\n                <textarea \r\n                    placeholder = \"What happend today ?\"\r\n                    className =\"notes__text-area\"\r\n                    name = \"body\"\r\n                    value = { body }\r\n                    onChange = { handleInputChange }\r\n                >\r\n\r\n                </textarea>\r\n\r\n                {\r\n                ( note.url) \r\n                    &&\r\n                    (<div className = \"notes__images\">\r\n                        <img src = { note.url }\r\n                            alt = \"example\"\r\n                        />\r\n                    </div>)\r\n\r\n                }\r\n\r\n            </div>\r\n\r\n            <button\r\n                className = \" btn btn-danger\"\r\n                onClick = { handleDelete }\r\n            >\r\n                Delete\r\n            </button>\r\n\r\n\r\n        </div>\r\n        </>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className =\"nothing__main-content\">\r\n            <p>\r\n                Select something\r\n                <br />\r\n                or create an entry!\r\n            </p>\r\n\r\n            <i className =\"far fa-star fa-4x mt-5\"></i>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nexport const setError = ( err ) => ({\r\n    type: types.uiSetError,\r\n    payload: err\r\n});\r\n\r\nexport const removeError = () => ({\r\n    type: types.uiRemoveError\r\n});\r\n\r\nexport const uiStartLoading = () => ({\r\n    type: types.uiStartLoading\r\n})\r\n\r\nexport const uiFinishLoading = () => ({\r\n    type: types.uiFinishLoading\r\n})\r\n\r\n\r\n\r\n\r\n\r\n","import { types } from \"../types/types\";\r\nimport { firebase, googleAuthProvider } from \"../firebase/firebaseConfig\";\r\nimport { uiFinishLoading, uiStartLoading } from \"./ui\";\r\nimport Swal from 'sweetalert2';\r\nimport { notesLogout } from \"./notes\";\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n    \r\n    \r\n    return ( dispatch ) => {\r\n        \r\n        dispatch( uiStartLoading() );\r\n\r\n         return firebase.auth().signInWithEmailAndPassword( email, password )\r\n            .then( ({ user }) => {\r\n                // console.log(user);\r\n                dispatch( login(user.uid, user.displayName ) );\r\n                dispatch( uiFinishLoading() );\r\n            })\r\n            .catch( e => {\r\n                console.log(e);\r\n                dispatch( uiFinishLoading() );\r\n                Swal.fire('Error', e.message, 'error');\r\n            })\r\n        \r\n\r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\r\n    return( dispatch ) => {\r\n        firebase.auth().createUserWithEmailAndPassword( email, password )\r\n        .then( async ({ user }) => {\r\n            \r\n            await user.updateProfile({ displayName:name });\r\n            console.log(user);\r\n            dispatch(\r\n                login(user.uid, user.displayName )\r\n            )\r\n            \r\n        })\r\n        .catch( e => {\r\n            console.log(e)\r\n            Swal.fire('Error', e.message, 'error');\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n    return ( dispatch ) => {\r\n\r\n        // console.log( 'google' );\r\n\r\n        firebase.auth().signInWithPopup( googleAuthProvider )\r\n            .then( ({ user }) => {\r\n                dispatch(\r\n                    login(user.uid, user.displayName )\r\n                )\r\n                // console.log( userCred );\r\n            })\r\n            .catch( e => {\r\n                console.log(e)\r\n                Swal.fire('Error', e.message, 'error');\r\n\r\n            })\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const login = ( uid, displayName) => {\r\n    return{\r\n        type: types.login,\r\n        payload: {\r\n            uid,\r\n            displayName\r\n        }\r\n    }\r\n}\r\n\r\nexport const startLogout = () => {\r\n    return async ( dispatch) => {\r\n        await firebase.auth().signOut();\r\n\r\n        dispatch( logout() );\r\n        dispatch( notesLogout() );\r\n    }\r\n}\r\n\r\nexport const logout = () => ({\r\n    type: types.logout\r\n})","import React from 'react';\r\nimport moment from 'moment';\r\nimport { activeNote } from '../../actions/notes'\r\nimport { useDispatch } from 'react-redux';\r\n\r\nexport const JournalEntry = ( { id, date, title, body, url } ) => {\r\n\r\n    const noteDate = moment(date);\r\n    const dispatch = useDispatch();\r\n    \r\n    \r\n    const handleEntryClick = () => {\r\n        // console.log(\"click entry\" , id)\r\n        dispatch( activeNote( id, {\r\n            id, date, title, body, url\r\n        }));\r\n\r\n    }\r\n\r\n    return (\r\n        <div \r\n            className =\"journal__entry pointer animate__animated animate__fadeIn\"\r\n            onClick = { handleEntryClick }\r\n\r\n        >\r\n           \r\n           { \r\n            url\r\n            &&\r\n            (<div\r\n                className =\"journal__entry-picture\"\r\n                style = {{\r\n                    backgroundSize: 'cover',\r\n                    backgroundImage: `url(${ url })`\r\n                }}\r\n            ></div>)\r\n           } \r\n            <div className =\"journal__entry-body\">\r\n                <p className=\"journal__entry-title\">\r\n                    { title }\r\n                </p>\r\n\r\n                <p className=\"journal__entry-content\">\r\n                    { body }\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"journal__entry-date-box\">\r\n                <span> { noteDate.format('dddd') } </span>\r\n                <h4> { noteDate.format('do') } </h4>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { JournalEntry } from './JournalEntry';\r\n\r\nexport const JournalEntries = () => {\r\n    \r\n    const { notes } = useSelector(state => state.notes)\r\n\r\n    return (\r\n        <div \r\n            className =\"journal__entries\"\r\n        >\r\n        {\r\n            \r\n            notes.map( note => (\r\n                <JournalEntry\r\n                    key = { note.id }\r\n                    {...note}\r\n                />\r\n            ))\r\n        }\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { startLogout } from '../../actions/auth';\r\nimport { startNewNote } from '../../actions/notes';\r\nimport { JournalEntries } from './JournalEntries'\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { name } = useSelector( state => state.auth );\r\n\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() );\r\n    }\r\n\r\n    const handleAddNew  = () => {\r\n        dispatch( startNewNote() );\r\n    }\r\n    return (\r\n        <aside className= \"journal__side-bar\">\r\n            \r\n            <div className =\"journal_sidebar-navbar mt-1\">\r\n                <h3>\r\n                    <i className=\"far fa-moon\" />\r\n                    <span> { name } </span>\r\n                </h3>\r\n\r\n                <button\r\n                    className =\"btn\"\r\n                    onClick = { handleLogout }\r\n                > Logout </button>\r\n            </div>\r\n\r\n            <div \r\n                className=\"journal__new-entry\"\r\n                onClick = { handleAddNew }    \r\n            >\r\n                <i className=\"far fa-calendar-plus fa-5x\" />\r\n                <p className=\"mt-5\"\r\n                > New Entry</p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n\r\n\r\n            \r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { NoteScreen } from '../notes/NoteScreen';\r\nimport { NothingSelected } from './NothingSelected';\r\n\r\nimport { Sidebar } from './Sidebar';\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const { active } = useSelector(state => state.notes);\r\n\r\n    return (\r\n        <div\r\n            className = \"journal__main-content animate__animated animate__fadeIn\"\r\n            \r\n        >\r\n\r\n            <Sidebar />\r\n\r\n            <main>\r\n               \r\n                {\r\n                    ( active )\r\n                        ? ( <NoteScreen /> )\r\n                        : ( <NothingSelected /> )\r\n                }\r\n\r\n            </main>\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport validator from 'validator';\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth';\r\nimport { removeError, setError } from '../../actions/ui';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { loading } = useSelector( state => state.ui);\r\n\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const { email, password } = formValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        if ( isFormValid() ){\r\n            dispatch( startLoginEmailPassword( email, password ) );\r\n        }\r\n    }\r\n\r\n    const handleGoogleLogin = () => { \r\n        // console.log('click handleGoogleLogin')\r\n        dispatch ( startGoogleLogin() );\r\n    };\r\n\r\n    const isFormValid = () => {\r\n\r\n        if ( !validator.isEmail( email ) ) {\r\n            dispatch( setError('Email is not valid') );\r\n            return false;\r\n        } else if ( password.length < 5 ) {\r\n            dispatch( setError('Password is not valid') );\r\n            return false;\r\n        }\r\n            \r\n        dispatch( removeError() );\r\n        \r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                className = \"animate__animated animate__fadeIn\"    \r\n                >\r\n\r\n            <h3 className= \"auth__title mb-5\"> Login </h3>\r\n\r\n            <form \r\n                onSubmit = { handleLogin }\r\n\r\n            >\r\n                <input \r\n                    type = \"text\"\r\n                    placeholder = \"Email\"\r\n                    name = \"email\"\r\n                    className = \"auth__input\"\r\n                    autoComplete = \"off\"\r\n                    value = { email }\r\n                    onChange = { handleInputChange }\r\n                />\r\n                \r\n                <input \r\n                    type = \"password\"\r\n                    placeholder = \"Password\"\r\n                    name = \"password\"\r\n                    className = \"auth__input\"\r\n                    value = { password }\r\n                    onChange = { handleInputChange }\r\n                />\r\n\r\n                <button\r\n                    type = \"submit\"\r\n                    className = \"btn btn-primary btn-block\"\r\n                    disabled = { loading }\r\n                >\r\n                    Login\r\n                </button>\r\n                \r\n                <div className = \"auth__social-networks mb-1\">\r\n                    <p>Login with Social networks</p>\r\n\r\n                    <div \r\n                        className=\"google-btn\" \r\n                        onClick = { handleGoogleLogin }\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <hr/>\r\n                <Link \r\n                    to = \"/auth/register\"\r\n                    className = \"link\"    \r\n                >\r\n                Create new Account\r\n                </Link>\r\n            </form>\r\n        </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport validator from 'validator';\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\r\nimport { removeError, setError } from '../../actions/ui';\r\n\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n// se puede utilizar useState, no es necesario utilizar redux aqui\r\n    const dispatch = useDispatch();\r\n    const { loading, msgError } = useSelector( state => state.ui );\r\n    \r\n    const [ formValues, handleInputChange ] = useForm({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: ''\r\n    });\r\n    const { name, email, password, password2 } = formValues;\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n        \r\n        if ( isFormValid() ) {\r\n            dispatch( startRegisterWithEmailPasswordName( email, password, name ));\r\n        }\r\n    }\r\n\r\n    const isFormValid = () => {\r\n\r\n        if( name.trim().length === 0){\r\n            dispatch( setError('Name is required') );\r\n            return false;\r\n        } else if ( !validator.isEmail( email ) ) {\r\n            dispatch( setError('Email is not valid') );\r\n            return false;\r\n        } else if ( password !== password2 || password.length < 5 ) {\r\n            dispatch( setError('Password is not valid') );\r\n            return false;\r\n        } else {\r\n            dispatch( removeError() );\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        < div\r\n                className = \"animate__animated animate__fadeIn\"    >\r\n\r\n            \r\n            <h3 className= \"auth__title mb-5\"> Register </h3>\r\n            \r\n            {\r\n                msgError \r\n                &&\r\n                (\r\n                    <div className=\"auth__alert-error\">\r\n                        {\r\n                            msgError \r\n                        }\r\n                    </div>\r\n                )\r\n            }\r\n\r\n            <form onSubmit = { handleRegister }>\r\n\r\n                <input \r\n                    type = \"text\"\r\n                    placeholder = \"Name\"\r\n                    name = \"name\"\r\n                    className = \"auth__input\"\r\n                    autoComplete = \"off\"\r\n                    value = { name }\r\n                    onChange = { handleInputChange }\r\n                />\r\n                <input \r\n                    type = \"text\"\r\n                    placeholder = \"Email\"\r\n                    name = \"email\"\r\n                    className = \"auth__input\"\r\n                    autoComplete = \"off\"\r\n                    value = { email }\r\n                    onChange = { handleInputChange }\r\n                />\r\n                \r\n                <input \r\n                    type = \"password\"\r\n                    placeholder = \"Password\"\r\n                    name = \"password\"\r\n                    className = \"auth__input\"\r\n                    value = { password }\r\n                    onChange = { handleInputChange }\r\n                />\r\n\r\n                <input \r\n                    type = \"password\"\r\n                    placeholder = \"Confirm Password\"\r\n                    name = \"password2\"\r\n                    className = \"auth__input\"\r\n                    value = { password2 }\r\n                    onChange = { handleInputChange }\r\n                />\r\n\r\n                <button\r\n                    type = \"submit\"\r\n                    className = \"btn btn-primary btn-block mb-5\"\r\n                    disabled = { loading }\r\n                >\r\n                    Register\r\n                </button>\r\n                \r\n                <hr/>\r\n                <Link\r\n                    to = \"/auth/login\"\r\n                    className = \"link mt-5\"    \r\n                >\r\n                    Already registered?\r\n                </Link>\r\n            </form>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\n\r\nimport { LoginScreen } from '../components/auth/LoginScreen'\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen'\r\n\r\nexport const AuthRouter = () => {\r\n\r\n\r\n    return (\r\n        <div className = \"auth__main\">\r\n            <div className = \"auth__box-container\" >\r\n\r\n                <Switch>\r\n                    <Route exact path = \"/auth/login\" component = { LoginScreen } />\r\n                    <Route exact path = \"/auth/register\" component = { RegisterScreen } />\r\n\r\n                    <Redirect to = \"/auth/login\" />\r\n                </Switch>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ... rest }\r\n            component = { ( props ) =>(\r\n                ( isAuthenticated )\r\n                    ? ( <Component {...props } /> )\r\n                    : ( <Redirect to = \"/auth/login\" /> )\r\n        )}\r\n        />\r\n    )\r\n}\r\n\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated : PropTypes.bool.isRequired,\r\n    component : PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n\r\n    return (\r\n        <Route { ... rest }\r\n            component = { ( props ) =>(\r\n                ( !isAuthenticated )\r\n                    ? ( <Component {...props } /> )\r\n                    : ( <Redirect to = \"/\" /> )\r\n        )}\r\n        \r\n        \r\n        />\r\n    )\r\n}\r\n\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated : PropTypes.bool.isRequired,\r\n    component : PropTypes.func.isRequired\r\n}","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch, \r\n    Redirect} from 'react-router-dom';\r\n\r\nimport { firebase } from '../firebase/firebaseConfig';\r\nimport { useDispatch } from 'react-redux';\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { login } from '../actions/auth';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nimport { startLoadingNotes } from '../actions/notes';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [ checking, setChecking ] = useState( true );\r\n    const [ isLoggedIn, setIsLoggedIn ] = useState( false )\r\n\r\n    useEffect(() => {\r\n\r\n        firebase.auth().onAuthStateChanged( (user) => {\r\n\r\n            if ( user?.uid ){\r\n                \r\n                dispatch( login( user.uid, user.displayName ) );\r\n                setIsLoggedIn( true );\r\n                \r\n                dispatch( startLoadingNotes( user.uid ) );\r\n\r\n            } else {\r\n                setIsLoggedIn( false );\r\n            }\r\n\r\n            setChecking( false );\r\n        } )\r\n        \r\n    }, [ dispatch, setChecking, setIsLoggedIn ])\r\n\r\n    if ( checking ) {\r\n        return (\r\n            //Can be better... (<Loading />) sweetalerts2 ?\r\n            <h1> Wait...</h1> \r\n        )\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute \r\n                        path = \"/auth\" \r\n                        component = { AuthRouter }\r\n                        isAuthenticated = { isLoggedIn }\r\n                    />\r\n\r\n                    <PrivateRoute \r\n                        exact \r\n                        path = \"/\" \r\n                        component = { JournalScreen } \r\n                        isAuthenticated = { isLoggedIn }\r\n                    />\r\n\r\n                    <Redirect to = \"/auth/login\" />\r\n\r\n                </Switch>\r\n\r\n            </div>\r\n\r\n        </Router>\r\n    )\r\n}\r\n","/*\r\n    {\r\n        notes : [],\r\n        active: null,\r\n        active: {\r\n            id: 'JHGFKJG123'\r\n            title: '',\r\n            bdy: '',\r\n            imageUrl: '',\r\n            date: 12313123\r\n        }\r\n    }\r\n*/\r\n\r\nimport { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    notes : [],\r\n    active: null,\r\n}\r\n\r\nexport const notesReducer = (state = initialState, action ) => {\r\n\r\n\r\n    switch ( action.type ) {\r\n\r\n        case types.notesActive :    \r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            };\r\n\r\n        case types.notesAddNew :    \r\n            return {\r\n                ...state,\r\n                notes: [ action.payload, ...state.notes]\r\n                \r\n            };\r\n\r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes:[ ...action.payload ]\r\n            }\r\n\r\n        case types.notesUpdated:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id\r\n                        ? action.payload.note\r\n                        : note\r\n                )\r\n            }\r\n\r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter( note => note.id !== action.payload )\r\n            }\r\n\r\n        case types.notesLogoutCleaning:\r\n            return {\r\n                ...state,\r\n                notes: [],\r\n                active: null,\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    loading : false,\r\n    msgError: null\r\n}\r\n\r\nexport const uiReducer = ( state = initialState, action) => {\r\n\r\n    switch ( action.type ) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload,\r\n            };\r\n            \r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null,\r\n            };\r\n        \r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            };\r\n\r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n            };    \r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer,\r\n});\r\n\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);\r\n\r\n","import { types } from \"../types/types\";\r\n\r\n/*\r\n    {\r\n        uid: 123123,\r\n        name: 'Sergio'\r\n    }\r\n*/\r\n\r\nexport const authReducer = (state = {}, action) =>{\r\n\r\n    switch ( action.type ) {\r\n        case types.login:    \r\n            return{\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n\r\n        case types.logout:    \r\n            return { };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import React from 'react';\r\nimport { Provider } from 'react-redux'\r\n\r\nimport { AppRouter } from './routers/AppRouter';\r\nimport { store } from './store/store';\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store = { store }>            \r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { JournalApp } from './JournalApp';\n\nimport './styles/styles.scss';\n\n\nReactDOM.render(\n  <JournalApp   />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}